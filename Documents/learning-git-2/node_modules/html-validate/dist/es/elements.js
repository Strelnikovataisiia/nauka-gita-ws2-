import { d as defineMetadata, m as metadataHelper } from './meta-helper.js';
import { D as DynamicValue } from './core.js';

/* eslint-disable sonarjs/no-duplicate-string */
const { allowedIfAttributeIsPresent, allowedIfAttributeIsAbsent, allowedIfAttributeHasValue } = metadataHelper;
var html5 = defineMetadata({
    "*": {
        attributes: {
            contenteditable: {
                omit: true,
                enum: ["true", "false"],
            },
            contextmenu: {
                deprecated: true,
            },
            dir: {
                enum: ["ltr", "rtl", "auto"],
            },
            draggable: {
                enum: ["true", "false"],
            },
            hidden: {
                boolean: true,
            },
            id: {
                enum: ["/\\S+/"],
            },
            tabindex: {
                enum: ["/-?\\d+/"],
            },
        },
    },
    a: {
        flow: true,
        phrasing: true,
        interactive: true,
        transparent: true,
        attributes: {
            charset: {
                deprecated: true,
            },
            coords: {
                deprecated: true,
            },
            datafld: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            download: {
                allowed: allowedIfAttributeIsPresent("href"),
                omit: true,
                enum: ["/.+/"],
            },
            href: {
                enum: ["/.*/"],
            },
            hreflang: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            itemprop: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            methods: {
                deprecated: true,
            },
            name: {
                deprecated: true,
            },
            ping: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            referrerpolicy: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            rel: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            shape: {
                deprecated: true,
            },
            target: {
                allowed: allowedIfAttributeIsPresent("href"),
                enum: ["/[^_].*/", "_blank", "_self", "_parent", "_top"],
            },
            type: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            urn: {
                deprecated: true,
            },
        },
        permittedDescendants: [{ exclude: "@interactive" }],
    },
    abbr: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    acronym: {
        deprecated: {
            message: "use <abbr> instead",
            documentation: "`<abbr>` can be used as a replacement.",
            source: "html5",
        },
    },
    address: {
        flow: true,
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["address", "header", "footer", "@heading", "@sectioning"] }],
    },
    applet: {
        deprecated: {
            source: "html5",
        },
        attributes: {
            datafld: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
        },
    },
    area: {
        flow: ["isDescendant", "map"],
        phrasing: ["isDescendant", "map"],
        void: true,
        attributes: {
            alt: {},
            coords: {
                allowed(node) {
                    const attr = node.getAttribute("shape");
                    if (attr && attr.valueMatches("default", false)) {
                        return `cannot be used when "shape" attribute is "default"`;
                    }
                    else {
                        return null;
                    }
                },
            },
            download: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            nohref: {
                deprecated: true,
            },
            itemprop: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            ping: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            referrerpolicy: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            rel: {
                allowed: allowedIfAttributeIsPresent("href"),
            },
            shape: {
                allowed(node) {
                    const attr = node.getAttribute("shape");
                    if (!attr || attr.value instanceof DynamicValue) {
                        return null;
                    }
                    const shape = attr.value || "rect";
                    switch (shape) {
                        case "circ":
                        case "circle":
                        case "poly":
                        case "polygon":
                        case "rect":
                        case "rectangle":
                            return allowedIfAttributeIsPresent("coords")(node);
                    }
                    return null;
                },
                enum: ["rect", "circle", "poly", "default"],
            },
            target: {
                allowed: allowedIfAttributeIsPresent("href"),
                enum: ["/[^_].*/", "_blank", "_self", "_parent", "_top"],
            },
        },
        requiredAncestors: ["map"],
    },
    article: {
        flow: true,
        sectioning: true,
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["main"] }],
    },
    aside: {
        flow: true,
        sectioning: true,
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["main"] }],
    },
    audio: {
        flow: true,
        phrasing: true,
        embedded: true,
        interactive: ["hasAttribute", "controls"],
        transparent: ["@flow"],
        attributes: {
            crossorigin: {
                omit: true,
                enum: ["anonymous", "use-credentials"],
            },
            itemprop: {
                allowed: allowedIfAttributeIsPresent("src"),
            },
            preload: {
                omit: true,
                enum: ["none", "metadata", "auto"],
            },
        },
        permittedContent: ["@flow", "track", "source"],
        permittedDescendants: [{ exclude: ["audio", "video"] }],
        permittedOrder: ["source", "track", "@flow"],
    },
    b: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    base: {
        metadata: true,
        void: true,
        permittedParent: ["head"],
    },
    basefont: {
        deprecated: {
            message: "use CSS instead",
            documentation: "Use CSS `font-size` property instead.",
            source: "html4",
        },
    },
    bdi: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    bdo: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    bgsound: {
        deprecated: {
            message: "use <audio> instead",
            documentation: "Use the `<audio>` element instead but consider accessibility concerns with autoplaying sounds.",
            source: "non-standard",
        },
    },
    big: {
        deprecated: {
            message: "use CSS instead",
            documentation: "Use CSS `font-size` property instead.",
            source: "html5",
        },
    },
    blink: {
        deprecated: {
            documentation: "`<blink>` has no direct replacement and blinking text is frowned upon by accessibility standards.",
            source: "non-standard",
        },
    },
    blockquote: {
        flow: true,
        sectioning: true,
        permittedContent: ["@flow"],
    },
    body: {
        permittedContent: ["@flow"],
        permittedParent: ["html"],
        attributes: {
            alink: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            bgcolor: {
                deprecated: true,
            },
            link: {
                deprecated: true,
            },
            marginbottom: {
                deprecated: true,
            },
            marginheight: {
                deprecated: true,
            },
            marginleft: {
                deprecated: true,
            },
            marginright: {
                deprecated: true,
            },
            margintop: {
                deprecated: true,
            },
            marginwidth: {
                deprecated: true,
            },
            text: {
                deprecated: true,
            },
            vlink: {
                deprecated: true,
            },
        },
    },
    br: {
        flow: true,
        phrasing: true,
        void: true,
        attributes: {
            clear: {
                deprecated: true,
            },
        },
    },
    button: {
        flow: true,
        phrasing: true,
        interactive: true,
        labelable: true,
        attributes: {
            autofocus: {
                boolean: true,
            },
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            disabled: {
                boolean: true,
            },
            formaction: {
                allowed: allowedIfAttributeHasValue("type", ["submit"], { defaultValue: "submit" }),
            },
            formenctype: {
                allowed: allowedIfAttributeHasValue("type", ["submit"], { defaultValue: "submit" }),
            },
            formmethod: {
                allowed: allowedIfAttributeHasValue("type", ["submit"], { defaultValue: "submit" }),
                enum: ["get", "post", "dialog"],
            },
            formnovalidate: {
                allowed: allowedIfAttributeHasValue("type", ["submit"], { defaultValue: "submit" }),
                boolean: true,
            },
            formtarget: {
                allowed: allowedIfAttributeHasValue("type", ["submit"], { defaultValue: "submit" }),
                enum: ["/[^_].*/", "_blank", "_self", "_parent", "_top"],
            },
            type: {
                required: true,
                enum: ["submit", "reset", "button"],
            },
        },
        permittedContent: ["@phrasing"],
        permittedDescendants: [{ exclude: ["@interactive"] }],
        textContent: "accessible",
    },
    canvas: {
        flow: true,
        phrasing: true,
        embedded: true,
        transparent: true,
    },
    caption: {
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["table"] }],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    center: {
        deprecated: {
            message: "use CSS instead",
            documentation: "Use the CSS `text-align` or `margin: auto` properties instead.",
            source: "html4",
        },
    },
    cite: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    code: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    col: {
        attributes: {
            align: {
                deprecated: true,
            },
            char: {
                deprecated: true,
            },
            charoff: {
                deprecated: true,
            },
            span: {
                enum: ["/\\d+/"],
            },
            valign: {
                deprecated: true,
            },
            width: {
                deprecated: true,
            },
        },
        void: true,
    },
    colgroup: {
        implicitClosed: ["colgroup"],
        attributes: {
            span: {
                enum: ["/\\d+/"],
            },
        },
        permittedContent: ["col", "template"],
    },
    data: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    datalist: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing", "option"],
    },
    dd: {
        implicitClosed: ["dd", "dt"],
        permittedContent: ["@flow"],
        requiredAncestors: ["dl > dd", "dl > div > dd"],
    },
    del: {
        flow: true,
        phrasing: true,
        transparent: true,
    },
    details: {
        flow: true,
        sectioning: true,
        interactive: true,
        attributes: {
            open: {
                boolean: true,
            },
        },
        permittedContent: ["summary", "@flow"],
        permittedOrder: ["summary", "@flow"],
        requiredContent: ["summary"],
    },
    dfn: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
        permittedDescendants: [{ exclude: ["dfn"] }],
    },
    dialog: {
        flow: true,
        permittedContent: ["@flow"],
        attributes: {
            open: {
                boolean: true,
            },
        },
    },
    dir: {
        deprecated: {
            documentation: "The non-standard `<dir>` element has no direct replacement but MDN recommends replacing with `<ul>` and CSS.",
            source: "html4",
        },
    },
    div: {
        flow: true,
        permittedContent: ["@flow", "dt", "dd"],
        attributes: {
            align: {
                deprecated: true,
            },
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
        },
    },
    dl: {
        flow: true,
        permittedContent: ["@script", "dt", "dd", "div"],
        attributes: {
            compact: {
                deprecated: true,
            },
        },
    },
    dt: {
        implicitClosed: ["dd", "dt"],
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["header", "footer", "@sectioning", "@heading"] }],
        requiredAncestors: ["dl > dt", "dl > div > dt"],
    },
    em: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    embed: {
        flow: true,
        phrasing: true,
        embedded: true,
        interactive: true,
        void: true,
        attributes: {
            src: {
                required: true,
                enum: ["/.+/"],
            },
            title: {
                required: true,
            },
        },
    },
    fieldset: {
        flow: true,
        attributes: {
            datafld: {
                deprecated: true,
            },
            disabled: {
                boolean: true,
            },
        },
        permittedContent: ["@flow", "legend?"],
        permittedOrder: ["legend", "@flow"],
    },
    figcaption: {
        permittedContent: ["@flow"],
    },
    figure: {
        flow: true,
        permittedContent: ["@flow", "figcaption?"],
        permittedOrder: ["figcaption", "@flow", "figcaption"],
    },
    font: {
        deprecated: {
            message: "use CSS instead",
            documentation: "Use CSS font properties instead.",
            source: "html4",
        },
    },
    footer: {
        flow: true,
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["header", "footer", "main"] }],
    },
    form: {
        flow: true,
        form: true,
        attributes: {
            action: {
                enum: [/^\s*\S+\s*$/],
            },
            accept: {
                deprecated: true,
            },
            autocomplete: {
                enum: ["on", "off"],
            },
            method: {
                enum: ["get", "post", "dialog"],
            },
            novalidate: {
                boolean: true,
            },
            target: {
                enum: ["/[^_].*/", "_blank", "_self", "_parent", "_top"],
            },
        },
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["@form"] }],
    },
    frame: {
        deprecated: {
            documentation: "The `<frame>` element can be replaced with the `<iframe>` element but a better solution is to remove usage of frames entirely.",
            source: "html5",
        },
        attributes: {
            datafld: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            title: {
                required: true,
            },
        },
    },
    frameset: {
        deprecated: {
            documentation: "The `<frameset>` element can be replaced with the `<iframe>` element but a better solution is to remove usage of frames entirely.",
            source: "html5",
        },
    },
    h1: {
        flow: true,
        heading: true,
        permittedContent: ["@phrasing"],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    h2: {
        flow: true,
        heading: true,
        permittedContent: ["@phrasing"],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    h3: {
        flow: true,
        heading: true,
        permittedContent: ["@phrasing"],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    h4: {
        flow: true,
        heading: true,
        permittedContent: ["@phrasing"],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    h5: {
        flow: true,
        heading: true,
        permittedContent: ["@phrasing"],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    h6: {
        flow: true,
        heading: true,
        permittedContent: ["@phrasing"],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    head: {
        permittedContent: ["base?", "title?", "@meta"],
        permittedParent: ["html"],
        requiredContent: ["title"],
        attributes: {
            profile: {
                deprecated: true,
            },
        },
    },
    header: {
        flow: true,
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["header", "footer", "main"] }],
    },
    hgroup: {
        deprecated: true,
    },
    hr: {
        flow: true,
        void: true,
        attributes: {
            align: {
                deprecated: true,
            },
            color: {
                deprecated: true,
            },
            noshade: {
                deprecated: true,
            },
            size: {
                deprecated: true,
            },
            width: {
                deprecated: true,
            },
        },
    },
    html: {
        permittedContent: ["head?", "body?"],
        permittedOrder: ["head", "body"],
        requiredContent: ["head", "body"],
        attributes: {
            lang: {
                required: true,
            },
            version: {
                deprecated: true,
            },
        },
    },
    i: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    iframe: {
        flow: true,
        phrasing: true,
        embedded: true,
        interactive: true,
        attributes: {
            align: {
                deprecated: true,
            },
            allowtransparency: {
                deprecated: true,
            },
            datafld: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            frameborder: {
                deprecated: true,
            },
            hspace: {
                deprecated: true,
            },
            marginheight: {
                deprecated: true,
            },
            marginwidth: {
                deprecated: true,
            },
            scrolling: {
                deprecated: true,
            },
            src: {
                enum: ["/.+/"],
            },
            title: {
                required: true,
            },
            vspace: {
                deprecated: true,
            },
        },
        permittedContent: [],
    },
    img: {
        flow: true,
        phrasing: true,
        embedded: true,
        interactive: ["hasAttribute", "usemap"],
        void: true,
        attributes: {
            align: {
                deprecated: true,
            },
            border: {
                deprecated: true,
            },
            crossorigin: {
                omit: true,
                enum: ["anonymous", "use-credentials"],
            },
            datafld: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            decoding: {
                enum: ["sync", "async", "auto"],
            },
            hspace: {
                deprecated: true,
            },
            ismap: {
                boolean: true,
            },
            lowsrc: {
                deprecated: true,
            },
            name: {
                deprecated: true,
            },
            src: {
                required: true,
                enum: ["/.+/"],
            },
            srcset: {
                enum: ["/[^]+/"],
            },
            vspace: {
                deprecated: true,
            },
        },
    },
    input: {
        flow: true,
        phrasing: true,
        interactive: ["matchAttribute", ["type", "!=", "hidden"]],
        void: true,
        labelable: ["matchAttribute", ["type", "!=", "hidden"]],
        attributes: {
            align: {
                deprecated: true,
            },
            autofocus: {
                boolean: true,
            },
            capture: {
                omit: true,
                enum: ["environment", "user"],
            },
            checked: {
                boolean: true,
            },
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            disabled: {
                boolean: true,
            },
            formaction: {
                allowed: allowedIfAttributeHasValue("type", ["submit", "image"], {
                    defaultValue: "submit",
                }),
            },
            formenctype: {
                allowed: allowedIfAttributeHasValue("type", ["submit", "image"], {
                    defaultValue: "submit",
                }),
            },
            formmethod: {
                allowed: allowedIfAttributeHasValue("type", ["submit", "image"], {
                    defaultValue: "submit",
                }),
                enum: ["get", "post", "dialog"],
            },
            formnovalidate: {
                allowed: allowedIfAttributeHasValue("type", ["submit", "image"], {
                    defaultValue: "submit",
                }),
                boolean: true,
            },
            formtarget: {
                allowed: allowedIfAttributeHasValue("type", ["submit", "image"], {
                    defaultValue: "submit",
                }),
                enum: ["/[^_].*/", "_blank", "_self", "_parent", "_top"],
            },
            hspace: {
                deprecated: true,
            },
            inputmode: {
                enum: ["none", "text", "decimal", "numeric", "tel", "search", "email", "url"],
            },
            ismap: {
                deprecated: true,
            },
            multiple: {
                boolean: true,
            },
            readonly: {
                boolean: true,
            },
            required: {
                boolean: true,
            },
            spellcheck: {
                enum: ["default", "false", "true"],
            },
            type: {
                required: true,
                enum: [
                    "button",
                    "checkbox",
                    "color",
                    "date",
                    "datetime-local",
                    "email",
                    "file",
                    "hidden",
                    "image",
                    "month",
                    "number",
                    "password",
                    "radio",
                    "range",
                    "reset",
                    "search",
                    "submit",
                    "tel",
                    "text",
                    "time",
                    "url",
                    "week",
                ],
            },
            usemap: {
                deprecated: true,
            },
            vspace: {
                deprecated: true,
            },
        },
    },
    ins: {
        flow: true,
        phrasing: true,
        transparent: true,
    },
    isindex: {
        deprecated: {
            source: "html4",
        },
    },
    kbd: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    keygen: {
        flow: true,
        phrasing: true,
        interactive: true,
        void: true,
        labelable: true,
        deprecated: true,
    },
    label: {
        flow: true,
        phrasing: true,
        interactive: true,
        permittedContent: ["@phrasing"],
        permittedDescendants: [{ exclude: ["label"] }],
        attributes: {
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
        },
    },
    legend: {
        permittedContent: ["@phrasing", "@heading"],
        attributes: {
            align: {
                deprecated: true,
            },
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
        },
    },
    li: {
        implicitClosed: ["li"],
        permittedContent: ["@flow"],
        permittedParent: ["ul", "ol", "menu", "template"],
        attributes: {
            type: {
                deprecated: true,
            },
        },
    },
    link: {
        metadata: true,
        void: true,
        attributes: {
            as: {
                allowed: allowedIfAttributeHasValue("rel", ["preload", "modulepreload"]),
                enum: [
                    "audio",
                    "audioworklet",
                    "document",
                    "embed",
                    "fetch",
                    "font",
                    "frame",
                    "iframe",
                    "image",
                    "manifest",
                    "object",
                    "paintworklet",
                    "report",
                    "script",
                    "serviceworker",
                    "sharedworker",
                    "style",
                    "track",
                    "video",
                    "webidentity",
                    "worker",
                    "xslt",
                ],
            },
            blocking: {
                allowed: allowedIfAttributeHasValue("rel", ["stylesheet", "preload", "modulepreload"]),
                list: true,
                enum: ["render"],
            },
            charset: {
                deprecated: true,
            },
            crossorigin: {
                omit: true,
                enum: ["anonymous", "use-credentials"],
            },
            disabled: {
                allowed: allowedIfAttributeHasValue("rel", ["stylesheet"]),
                boolean: true,
            },
            href: {
                required: true,
                enum: ["/.+/"],
            },
            integrity: {
                allowed: allowedIfAttributeHasValue("rel", ["stylesheet", "preload", "modulepreload"]),
                enum: ["/.+/"],
            },
            methods: {
                deprecated: true,
            },
            target: {
                deprecated: true,
            },
            urn: {
                deprecated: true,
            },
        },
    },
    listing: {
        deprecated: {
            source: "html32",
        },
    },
    main: {
        flow: true,
    },
    map: {
        flow: true,
        phrasing: true,
        transparent: true,
        attributes: {
            name: {
                required: true,
                enum: ["/\\S+/"],
            },
        },
    },
    mark: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    marquee: {
        deprecated: {
            documentation: "Marked as obsolete by both W3C and WHATWG standards but still implemented in most browsers. Animated text should be avoided for accessibility reasons as well.",
            source: "html5",
        },
        attributes: {
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
        },
    },
    math: {
        flow: true,
        foreign: true,
        phrasing: true,
        embedded: true,
        attributes: {
            align: {
                deprecated: true,
            },
            dir: {
                enum: ["ltr", "rtl"],
            },
            display: {
                enum: ["block", "inline"],
            },
            hspace: {
                deprecated: true,
            },
            name: {
                deprecated: true,
            },
            overflow: {
                enum: ["linebreak", "scroll", "elide", "truncate", "scale"],
            },
            vspace: {
                deprecated: true,
            },
        },
    },
    menu: {
        flow: true,
        permittedContent: ["@script", "li"],
    },
    meta: {
        flow: ["hasAttribute", "itemprop"],
        phrasing: ["hasAttribute", "itemprop"],
        metadata: true,
        void: true,
        attributes: {
            charset: {
                enum: ["utf-8"],
            },
            content: {
                allowed: allowedIfAttributeIsPresent("name", "http-equiv", "itemprop", "property"),
            },
            itemprop: {
                allowed: allowedIfAttributeIsAbsent("http-equiv", "name"),
            },
            name: {
                allowed: allowedIfAttributeIsAbsent("http-equiv", "itemprop"),
            },
            "http-equiv": {
                allowed: allowedIfAttributeIsAbsent("name", "itemprop"),
            },
            scheme: {
                deprecated: true,
            },
        },
    },
    meter: {
        flow: true,
        phrasing: true,
        labelable: true,
        permittedContent: ["@phrasing"],
        permittedDescendants: [{ exclude: "meter" }],
    },
    multicol: {
        deprecated: {
            message: "use CSS instead",
            documentation: "Use CSS columns instead.",
            source: "html5",
        },
    },
    nav: {
        flow: true,
        sectioning: true,
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: "main" }],
    },
    nextid: {
        deprecated: {
            source: "html32",
        },
    },
    nobr: {
        deprecated: {
            message: "use CSS instead",
            documentation: "Use CSS `white-space` property instead.",
            source: "non-standard",
        },
    },
    noembed: {
        deprecated: {
            source: "non-standard",
        },
    },
    noframes: {
        deprecated: {
            source: "html5",
        },
    },
    noscript: {
        metadata: true,
        flow: true,
        phrasing: true,
        transparent: true,
        permittedDescendants: [{ exclude: "noscript" }],
    },
    object: {
        flow: true,
        phrasing: true,
        embedded: true,
        interactive: ["hasAttribute", "usemap"],
        transparent: true,
        attributes: {
            align: {
                deprecated: true,
            },
            archive: {
                deprecated: true,
            },
            blocking: {
                list: true,
                enum: ["render"],
            },
            border: {
                deprecated: true,
            },
            classid: {
                deprecated: true,
            },
            code: {
                deprecated: true,
            },
            codebase: {
                deprecated: true,
            },
            codetype: {
                deprecated: true,
            },
            data: {
                enum: ["/.+/"],
                required: true,
            },
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            declare: {
                deprecated: true,
            },
            hspace: {
                deprecated: true,
            },
            name: {
                enum: ["/[^_].*/"],
            },
            standby: {
                deprecated: true,
            },
            vspace: {
                deprecated: true,
            },
        },
        permittedContent: ["param", "@flow"],
        permittedOrder: ["param", "@flow"],
    },
    ol: {
        flow: true,
        attributes: {
            compact: {
                deprecated: true,
            },
            reversed: {
                boolean: true,
            },
            type: {
                enum: ["a", "A", "i", "I", "1"],
            },
        },
        permittedContent: ["@script", "li"],
    },
    optgroup: {
        implicitClosed: ["optgroup"],
        attributes: {
            disabled: {
                boolean: true,
            },
        },
        permittedContent: ["@script", "option"],
    },
    option: {
        implicitClosed: ["option"],
        attributes: {
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            disabled: {
                boolean: true,
            },
            name: {
                deprecated: true,
            },
            selected: {
                boolean: true,
            },
        },
        permittedContent: [],
    },
    output: {
        flow: true,
        phrasing: true,
        labelable: true,
        permittedContent: ["@phrasing"],
    },
    p: {
        flow: true,
        implicitClosed: [
            "address",
            "article",
            "aside",
            "blockquote",
            "div",
            "dl",
            "fieldset",
            "footer",
            "form",
            "h1",
            "h2",
            "h3",
            "h4",
            "h5",
            "h6",
            "header",
            "hgroup",
            "hr",
            "main",
            "nav",
            "ol",
            "p",
            "pre",
            "section",
            "table",
            "ul",
        ],
        permittedContent: ["@phrasing"],
        attributes: {
            align: {
                deprecated: true,
            },
        },
    },
    param: {
        void: true,
        attributes: {
            datafld: {
                deprecated: true,
            },
            type: {
                deprecated: true,
            },
            valuetype: {
                deprecated: true,
            },
        },
    },
    picture: {
        flow: true,
        phrasing: true,
        embedded: true,
        permittedContent: ["@script", "source", "img"],
        permittedOrder: ["source", "img"],
    },
    plaintext: {
        deprecated: {
            message: "use <pre> or CSS instead",
            documentation: "Use the `<pre>` element or use CSS to set a monospace font.",
            source: "html2",
        },
    },
    pre: {
        flow: true,
        permittedContent: ["@phrasing"],
        attributes: {
            width: {
                deprecated: true,
            },
        },
    },
    progress: {
        flow: true,
        phrasing: true,
        labelable: true,
        permittedContent: ["@phrasing"],
        permittedDescendants: [{ exclude: "progress" }],
    },
    q: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    rb: {
        implicitClosed: ["rb", "rt", "rtc", "rp"],
        permittedContent: ["@phrasing"],
    },
    rp: {
        implicitClosed: ["rb", "rt", "rtc", "rp"],
        permittedContent: ["@phrasing"],
    },
    rt: {
        implicitClosed: ["rb", "rt", "rtc", "rp"],
        permittedContent: ["@phrasing"],
    },
    rtc: {
        implicitClosed: ["rb", "rtc", "rp"],
        permittedContent: ["@phrasing", "rt"],
    },
    ruby: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing", "rb", "rp", "rt", "rtc"],
    },
    s: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    samp: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    script: {
        metadata: true,
        flow: true,
        phrasing: true,
        scriptSupporting: true,
        attributes: {
            async: {
                boolean: true,
            },
            crossorigin: {
                omit: true,
                enum: ["anonymous", "use-credentials"],
            },
            defer: {
                boolean: true,
            },
            event: {
                deprecated: true,
            },
            for: {
                deprecated: true,
            },
            integrity: {
                allowed: allowedIfAttributeIsPresent("src"),
                enum: ["/.+/"],
            },
            language: {
                deprecated: true,
            },
            nomodule: {
                boolean: true,
            },
            src: {
                enum: ["/.+/"],
            },
        },
    },
    section: {
        flow: true,
        sectioning: true,
        permittedContent: ["@flow"],
    },
    select: {
        flow: true,
        phrasing: true,
        interactive: true,
        labelable: true,
        attributes: {
            autofocus: {
                boolean: true,
            },
            disabled: {
                boolean: true,
            },
            multiple: {
                boolean: true,
            },
            required: {
                boolean: true,
            },
            size: {
                enum: ["/\\d+/"],
            },
        },
        permittedContent: ["@script", "datasrc", "datafld", "dataformatas", "option", "optgroup"],
    },
    slot: {
        flow: true,
        phrasing: true,
        transparent: true,
    },
    small: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    source: {
        void: true,
    },
    spacer: {
        deprecated: {
            message: "use CSS instead",
            documentation: "Use CSS margin or padding instead.",
            source: "non-standard",
        },
    },
    span: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
        attributes: {
            datafld: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
        },
    },
    strike: {
        deprecated: {
            message: "use <del> or <s> instead",
            documentation: "Use the `<del>` or `<s>` element instead.",
            source: "html5",
        },
    },
    strong: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    style: {
        metadata: true,
    },
    sub: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    summary: {
        permittedContent: ["@phrasing", "@heading"],
    },
    sup: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    svg: {
        flow: true,
        foreign: true,
        phrasing: true,
        embedded: true,
    },
    /* while not part of HTML 5 specification these two elements are handled as
     * special cases to allow them as accessible text and to avoid issues with
     * "no-unknown-elements" they are added here */
    "svg:desc": {},
    "svg:title": {},
    table: {
        flow: true,
        permittedContent: ["@script", "caption?", "colgroup", "tbody", "tfoot?", "thead?", "tr"],
        permittedOrder: ["caption", "colgroup", "thead", "tbody", "tr", "tfoot"],
        attributes: {
            align: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            bgcolor: {
                deprecated: true,
            },
            bordercolor: {
                deprecated: true,
            },
            cellpadding: {
                deprecated: true,
            },
            cellspacing: {
                deprecated: true,
            },
            dataformatas: {
                deprecated: true,
            },
            datapagesize: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            frame: {
                deprecated: true,
            },
            rules: {
                deprecated: true,
            },
            summary: {
                deprecated: true,
            },
            width: {
                deprecated: true,
            },
        },
    },
    tbody: {
        implicitClosed: ["tbody", "tfoot"],
        permittedContent: ["@script", "tr"],
        attributes: {
            align: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            char: {
                deprecated: true,
            },
            charoff: {
                deprecated: true,
            },
            valign: {
                deprecated: true,
            },
        },
    },
    td: {
        flow: true,
        implicitClosed: ["td", "th"],
        attributes: {
            align: {
                deprecated: true,
            },
            axis: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            bgcolor: {
                deprecated: true,
            },
            char: {
                deprecated: true,
            },
            charoff: {
                deprecated: true,
            },
            colspan: {
                enum: ["/\\d+/"],
            },
            height: {
                deprecated: true,
            },
            nowrap: {
                deprecated: true,
            },
            rowspan: {
                enum: ["/\\d+/"],
            },
            scope: {
                deprecated: true,
            },
            valign: {
                deprecated: true,
            },
            width: {
                deprecated: true,
            },
        },
        permittedContent: ["@flow"],
    },
    template: {
        metadata: true,
        flow: true,
        phrasing: true,
        scriptSupporting: true,
    },
    textarea: {
        flow: true,
        phrasing: true,
        interactive: true,
        labelable: true,
        attributes: {
            autocomplete: {
                enum: ["on", "off"],
            },
            autofocus: {
                boolean: true,
            },
            cols: {
                enum: ["/\\d+/"],
            },
            datafld: {
                deprecated: true,
            },
            datasrc: {
                deprecated: true,
            },
            disabled: {
                boolean: true,
            },
            maxlength: {
                enum: ["/\\d+/"],
            },
            minlength: {
                enum: ["/\\d+/"],
            },
            readonly: {
                boolean: true,
            },
            required: {
                boolean: true,
            },
            rows: {
                enum: ["/\\d+/"],
            },
            spellcheck: {
                enum: ["true", "default", "false"],
            },
            wrap: {
                enum: ["hard", "soft"],
            },
        },
        permittedContent: [],
    },
    tfoot: {
        implicitClosed: ["tbody"],
        permittedContent: ["@script", "tr"],
        attributes: {
            align: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            char: {
                deprecated: true,
            },
            charoff: {
                deprecated: true,
            },
            valign: {
                deprecated: true,
            },
        },
    },
    th: {
        flow: true,
        implicitClosed: ["td", "th"],
        attributes: {
            align: {
                deprecated: true,
            },
            axis: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            bgcolor: {
                deprecated: true,
            },
            char: {
                deprecated: true,
            },
            charoff: {
                deprecated: true,
            },
            colspan: {
                enum: ["/\\d+/"],
            },
            height: {
                deprecated: true,
            },
            nowrap: {
                deprecated: true,
            },
            rowspan: {
                enum: ["/\\d+/"],
            },
            scope: {
                required: true,
                enum: ["row", "col", "rowgroup", "colgroup", "auto"],
            },
            valign: {
                deprecated: true,
            },
            width: {
                deprecated: true,
            },
        },
        permittedContent: ["@flow"],
        permittedDescendants: [{ exclude: ["header", "footer", "@sectioning", "@heading"] }],
    },
    thead: {
        implicitClosed: ["tbody", "tfoot"],
        permittedContent: ["@script", "tr"],
        attributes: {
            align: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            char: {
                deprecated: true,
            },
            charoff: {
                deprecated: true,
            },
            valign: {
                deprecated: true,
            },
        },
    },
    time: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    title: {
        metadata: true,
        permittedContent: [],
        permittedParent: ["head"],
    },
    tr: {
        implicitClosed: ["tr"],
        permittedContent: ["@script", "td", "th"],
        attributes: {
            align: {
                deprecated: true,
            },
            background: {
                deprecated: true,
            },
            bgcolor: {
                deprecated: true,
            },
            char: {
                deprecated: true,
            },
            charoff: {
                deprecated: true,
            },
            valign: {
                deprecated: true,
            },
        },
    },
    track: {
        void: true,
    },
    tt: {
        deprecated: {
            documentation: "Use a more semantically correct element such as `<code>`, `<var>` or `<pre>`.",
            source: "html4",
        },
    },
    u: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    ul: {
        flow: true,
        permittedContent: ["@script", "li"],
        attributes: {
            compact: {
                deprecated: true,
            },
            type: {
                deprecated: true,
            },
        },
    },
    var: {
        flow: true,
        phrasing: true,
        permittedContent: ["@phrasing"],
    },
    video: {
        flow: true,
        phrasing: true,
        embedded: true,
        interactive: ["hasAttribute", "controls"],
        transparent: ["@flow"],
        attributes: {
            crossorigin: {
                omit: true,
                enum: ["anonymous", "use-credentials"],
            },
            itemprop: {
                allowed: allowedIfAttributeIsPresent("src"),
            },
            preload: {
                omit: true,
                enum: ["none", "metadata", "auto"],
            },
        },
        permittedContent: ["@flow", "track", "source"],
        permittedDescendants: [{ exclude: ["audio", "video"] }],
        permittedOrder: ["source", "track", "@flow"],
    },
    wbr: {
        flow: true,
        phrasing: true,
        void: true,
    },
    xmp: {
        deprecated: {
            documentation: "Use `<pre>` or `<code>` and escape content using HTML entities instead.",
            source: "html32",
        },
    },
});

const bundledElements = {
    html5,
};

var entities = [
	"&aacute;",
	"&abreve;",
	"&ac;",
	"&acd;",
	"&ace;",
	"&acirc;",
	"&acute;",
	"&acy;",
	"&aelig;",
	"&af;",
	"&afr;",
	"&agrave;",
	"&alefsym;",
	"&aleph;",
	"&alpha;",
	"&amacr;",
	"&amalg;",
	"&amp;",
	"&and;",
	"&andand;",
	"&andd;",
	"&andslope;",
	"&andv;",
	"&ang;",
	"&ange;",
	"&angle;",
	"&angmsd;",
	"&angmsdaa;",
	"&angmsdab;",
	"&angmsdac;",
	"&angmsdad;",
	"&angmsdae;",
	"&angmsdaf;",
	"&angmsdag;",
	"&angmsdah;",
	"&angrt;",
	"&angrtvb;",
	"&angrtvbd;",
	"&angsph;",
	"&angst;",
	"&angzarr;",
	"&aogon;",
	"&aopf;",
	"&ap;",
	"&apacir;",
	"&ape;",
	"&apid;",
	"&apos;",
	"&applyfunction;",
	"&approx;",
	"&approxeq;",
	"&aring;",
	"&ascr;",
	"&assign;",
	"&ast;",
	"&asymp;",
	"&asympeq;",
	"&atilde;",
	"&auml;",
	"&awconint;",
	"&awint;",
	"&backcong;",
	"&backepsilon;",
	"&backprime;",
	"&backsim;",
	"&backsimeq;",
	"&backslash;",
	"&barv;",
	"&barvee;",
	"&barwed;",
	"&barwedge;",
	"&bbrk;",
	"&bbrktbrk;",
	"&bcong;",
	"&bcy;",
	"&bdquo;",
	"&becaus;",
	"&because;",
	"&bemptyv;",
	"&bepsi;",
	"&bernou;",
	"&bernoullis;",
	"&beta;",
	"&beth;",
	"&between;",
	"&bfr;",
	"&bigcap;",
	"&bigcirc;",
	"&bigcup;",
	"&bigodot;",
	"&bigoplus;",
	"&bigotimes;",
	"&bigsqcup;",
	"&bigstar;",
	"&bigtriangledown;",
	"&bigtriangleup;",
	"&biguplus;",
	"&bigvee;",
	"&bigwedge;",
	"&bkarow;",
	"&blacklozenge;",
	"&blacksquare;",
	"&blacktriangle;",
	"&blacktriangledown;",
	"&blacktriangleleft;",
	"&blacktriangleright;",
	"&blank;",
	"&blk12;",
	"&blk14;",
	"&blk34;",
	"&block;",
	"&bne;",
	"&bnequiv;",
	"&bnot;",
	"&bopf;",
	"&bot;",
	"&bottom;",
	"&bowtie;",
	"&boxbox;",
	"&boxdl;",
	"&boxdr;",
	"&boxh;",
	"&boxhd;",
	"&boxhu;",
	"&boxminus;",
	"&boxplus;",
	"&boxtimes;",
	"&boxul;",
	"&boxur;",
	"&boxv;",
	"&boxvh;",
	"&boxvl;",
	"&boxvr;",
	"&bprime;",
	"&breve;",
	"&brvbar;",
	"&bscr;",
	"&bsemi;",
	"&bsim;",
	"&bsime;",
	"&bsol;",
	"&bsolb;",
	"&bsolhsub;",
	"&bull;",
	"&bullet;",
	"&bump;",
	"&bumpe;",
	"&bumpeq;",
	"&cacute;",
	"&cap;",
	"&capand;",
	"&capbrcup;",
	"&capcap;",
	"&capcup;",
	"&capdot;",
	"&capitaldifferentiald;",
	"&caps;",
	"&caret;",
	"&caron;",
	"&cayleys;",
	"&ccaps;",
	"&ccaron;",
	"&ccedil;",
	"&ccirc;",
	"&cconint;",
	"&ccups;",
	"&ccupssm;",
	"&cdot;",
	"&cedil;",
	"&cedilla;",
	"&cemptyv;",
	"&cent;",
	"&centerdot;",
	"&cfr;",
	"&chcy;",
	"&check;",
	"&checkmark;",
	"&chi;",
	"&cir;",
	"&circ;",
	"&circeq;",
	"&circlearrowleft;",
	"&circlearrowright;",
	"&circledast;",
	"&circledcirc;",
	"&circleddash;",
	"&circledot;",
	"&circledr;",
	"&circleds;",
	"&circleminus;",
	"&circleplus;",
	"&circletimes;",
	"&cire;",
	"&cirfnint;",
	"&cirmid;",
	"&cirscir;",
	"&clockwisecontourintegral;",
	"&closecurlydoublequote;",
	"&closecurlyquote;",
	"&clubs;",
	"&clubsuit;",
	"&colon;",
	"&colone;",
	"&coloneq;",
	"&comma;",
	"&commat;",
	"&comp;",
	"&compfn;",
	"&complement;",
	"&complexes;",
	"&cong;",
	"&congdot;",
	"&congruent;",
	"&conint;",
	"&contourintegral;",
	"&copf;",
	"&coprod;",
	"&coproduct;",
	"&copy;",
	"&copysr;",
	"&counterclockwisecontourintegral;",
	"&crarr;",
	"&cross;",
	"&cscr;",
	"&csub;",
	"&csube;",
	"&csup;",
	"&csupe;",
	"&ctdot;",
	"&cudarrl;",
	"&cudarrr;",
	"&cuepr;",
	"&cuesc;",
	"&cularr;",
	"&cularrp;",
	"&cup;",
	"&cupbrcap;",
	"&cupcap;",
	"&cupcup;",
	"&cupdot;",
	"&cupor;",
	"&cups;",
	"&curarr;",
	"&curarrm;",
	"&curlyeqprec;",
	"&curlyeqsucc;",
	"&curlyvee;",
	"&curlywedge;",
	"&curren;",
	"&curvearrowleft;",
	"&curvearrowright;",
	"&cuvee;",
	"&cuwed;",
	"&cwconint;",
	"&cwint;",
	"&cylcty;",
	"&dagger;",
	"&daleth;",
	"&darr;",
	"&dash;",
	"&dashv;",
	"&dbkarow;",
	"&dblac;",
	"&dcaron;",
	"&dcy;",
	"&dd;",
	"&ddagger;",
	"&ddarr;",
	"&ddotrahd;",
	"&ddotseq;",
	"&deg;",
	"&del;",
	"&delta;",
	"&demptyv;",
	"&dfisht;",
	"&dfr;",
	"&dhar;",
	"&dharl;",
	"&dharr;",
	"&diacriticalacute;",
	"&diacriticaldot;",
	"&diacriticaldoubleacute;",
	"&diacriticalgrave;",
	"&diacriticaltilde;",
	"&diam;",
	"&diamond;",
	"&diamondsuit;",
	"&diams;",
	"&die;",
	"&differentiald;",
	"&digamma;",
	"&disin;",
	"&div;",
	"&divide;",
	"&divideontimes;",
	"&divonx;",
	"&djcy;",
	"&dlcorn;",
	"&dlcrop;",
	"&dollar;",
	"&dopf;",
	"&dot;",
	"&dotdot;",
	"&doteq;",
	"&doteqdot;",
	"&dotequal;",
	"&dotminus;",
	"&dotplus;",
	"&dotsquare;",
	"&doublebarwedge;",
	"&doublecontourintegral;",
	"&doubledot;",
	"&doubledownarrow;",
	"&doubleleftarrow;",
	"&doubleleftrightarrow;",
	"&doublelefttee;",
	"&doublelongleftarrow;",
	"&doublelongleftrightarrow;",
	"&doublelongrightarrow;",
	"&doublerightarrow;",
	"&doublerighttee;",
	"&doubleuparrow;",
	"&doubleupdownarrow;",
	"&doubleverticalbar;",
	"&downarrow;",
	"&downarrowbar;",
	"&downarrowuparrow;",
	"&downbreve;",
	"&downdownarrows;",
	"&downharpoonleft;",
	"&downharpoonright;",
	"&downleftrightvector;",
	"&downleftteevector;",
	"&downleftvector;",
	"&downleftvectorbar;",
	"&downrightteevector;",
	"&downrightvector;",
	"&downrightvectorbar;",
	"&downtee;",
	"&downteearrow;",
	"&drbkarow;",
	"&drcorn;",
	"&drcrop;",
	"&dscr;",
	"&dscy;",
	"&dsol;",
	"&dstrok;",
	"&dtdot;",
	"&dtri;",
	"&dtrif;",
	"&duarr;",
	"&duhar;",
	"&dwangle;",
	"&dzcy;",
	"&dzigrarr;",
	"&eacute;",
	"&easter;",
	"&ecaron;",
	"&ecir;",
	"&ecirc;",
	"&ecolon;",
	"&ecy;",
	"&eddot;",
	"&edot;",
	"&ee;",
	"&efdot;",
	"&efr;",
	"&eg;",
	"&egrave;",
	"&egs;",
	"&egsdot;",
	"&el;",
	"&element;",
	"&elinters;",
	"&ell;",
	"&els;",
	"&elsdot;",
	"&emacr;",
	"&empty;",
	"&emptyset;",
	"&emptysmallsquare;",
	"&emptyv;",
	"&emptyverysmallsquare;",
	"&emsp13;",
	"&emsp14;",
	"&emsp;",
	"&eng;",
	"&ensp;",
	"&eogon;",
	"&eopf;",
	"&epar;",
	"&eparsl;",
	"&eplus;",
	"&epsi;",
	"&epsilon;",
	"&epsiv;",
	"&eqcirc;",
	"&eqcolon;",
	"&eqsim;",
	"&eqslantgtr;",
	"&eqslantless;",
	"&equal;",
	"&equals;",
	"&equaltilde;",
	"&equest;",
	"&equilibrium;",
	"&equiv;",
	"&equivdd;",
	"&eqvparsl;",
	"&erarr;",
	"&erdot;",
	"&escr;",
	"&esdot;",
	"&esim;",
	"&eta;",
	"&eth;",
	"&euml;",
	"&euro;",
	"&excl;",
	"&exist;",
	"&exists;",
	"&expectation;",
	"&exponentiale;",
	"&fallingdotseq;",
	"&fcy;",
	"&female;",
	"&ffilig;",
	"&fflig;",
	"&ffllig;",
	"&ffr;",
	"&filig;",
	"&filledsmallsquare;",
	"&filledverysmallsquare;",
	"&fjlig;",
	"&flat;",
	"&fllig;",
	"&fltns;",
	"&fnof;",
	"&fopf;",
	"&forall;",
	"&fork;",
	"&forkv;",
	"&fouriertrf;",
	"&fpartint;",
	"&frac12;",
	"&frac13;",
	"&frac14;",
	"&frac15;",
	"&frac16;",
	"&frac18;",
	"&frac23;",
	"&frac25;",
	"&frac34;",
	"&frac35;",
	"&frac38;",
	"&frac45;",
	"&frac56;",
	"&frac58;",
	"&frac78;",
	"&frasl;",
	"&frown;",
	"&fscr;",
	"&gacute;",
	"&gamma;",
	"&gammad;",
	"&gap;",
	"&gbreve;",
	"&gcedil;",
	"&gcirc;",
	"&gcy;",
	"&gdot;",
	"&ge;",
	"&gel;",
	"&geq;",
	"&geqq;",
	"&geqslant;",
	"&ges;",
	"&gescc;",
	"&gesdot;",
	"&gesdoto;",
	"&gesdotol;",
	"&gesl;",
	"&gesles;",
	"&gfr;",
	"&gg;",
	"&ggg;",
	"&gimel;",
	"&gjcy;",
	"&gl;",
	"&gla;",
	"&gle;",
	"&glj;",
	"&gnap;",
	"&gnapprox;",
	"&gne;",
	"&gneq;",
	"&gneqq;",
	"&gnsim;",
	"&gopf;",
	"&grave;",
	"&greaterequal;",
	"&greaterequalless;",
	"&greaterfullequal;",
	"&greatergreater;",
	"&greaterless;",
	"&greaterslantequal;",
	"&greatertilde;",
	"&gscr;",
	"&gsim;",
	"&gsime;",
	"&gsiml;",
	"&gt;",
	"&gtcc;",
	"&gtcir;",
	"&gtdot;",
	"&gtlpar;",
	"&gtquest;",
	"&gtrapprox;",
	"&gtrarr;",
	"&gtrdot;",
	"&gtreqless;",
	"&gtreqqless;",
	"&gtrless;",
	"&gtrsim;",
	"&gvertneqq;",
	"&gvne;",
	"&hacek;",
	"&hairsp;",
	"&half;",
	"&hamilt;",
	"&hardcy;",
	"&harr;",
	"&harrcir;",
	"&harrw;",
	"&hat;",
	"&hbar;",
	"&hcirc;",
	"&hearts;",
	"&heartsuit;",
	"&hellip;",
	"&hercon;",
	"&hfr;",
	"&hilbertspace;",
	"&hksearow;",
	"&hkswarow;",
	"&hoarr;",
	"&homtht;",
	"&hookleftarrow;",
	"&hookrightarrow;",
	"&hopf;",
	"&horbar;",
	"&horizontalline;",
	"&hscr;",
	"&hslash;",
	"&hstrok;",
	"&humpdownhump;",
	"&humpequal;",
	"&hybull;",
	"&hyphen;",
	"&iacute;",
	"&ic;",
	"&icirc;",
	"&icy;",
	"&idot;",
	"&iecy;",
	"&iexcl;",
	"&iff;",
	"&ifr;",
	"&igrave;",
	"&ii;",
	"&iiiint;",
	"&iiint;",
	"&iinfin;",
	"&iiota;",
	"&ijlig;",
	"&im;",
	"&imacr;",
	"&image;",
	"&imaginaryi;",
	"&imagline;",
	"&imagpart;",
	"&imath;",
	"&imof;",
	"&imped;",
	"&implies;",
	"&in;",
	"&incare;",
	"&infin;",
	"&infintie;",
	"&inodot;",
	"&int;",
	"&intcal;",
	"&integers;",
	"&integral;",
	"&intercal;",
	"&intersection;",
	"&intlarhk;",
	"&intprod;",
	"&invisiblecomma;",
	"&invisibletimes;",
	"&iocy;",
	"&iogon;",
	"&iopf;",
	"&iota;",
	"&iprod;",
	"&iquest;",
	"&iscr;",
	"&isin;",
	"&isindot;",
	"&isine;",
	"&isins;",
	"&isinsv;",
	"&isinv;",
	"&it;",
	"&itilde;",
	"&iukcy;",
	"&iuml;",
	"&jcirc;",
	"&jcy;",
	"&jfr;",
	"&jmath;",
	"&jopf;",
	"&jscr;",
	"&jsercy;",
	"&jukcy;",
	"&kappa;",
	"&kappav;",
	"&kcedil;",
	"&kcy;",
	"&kfr;",
	"&kgreen;",
	"&khcy;",
	"&kjcy;",
	"&kopf;",
	"&kscr;",
	"&laarr;",
	"&lacute;",
	"&laemptyv;",
	"&lagran;",
	"&lambda;",
	"&lang;",
	"&langd;",
	"&langle;",
	"&lap;",
	"&laplacetrf;",
	"&laquo;",
	"&larr;",
	"&larrb;",
	"&larrbfs;",
	"&larrfs;",
	"&larrhk;",
	"&larrlp;",
	"&larrpl;",
	"&larrsim;",
	"&larrtl;",
	"&lat;",
	"&latail;",
	"&late;",
	"&lates;",
	"&lbarr;",
	"&lbbrk;",
	"&lbrace;",
	"&lbrack;",
	"&lbrke;",
	"&lbrksld;",
	"&lbrkslu;",
	"&lcaron;",
	"&lcedil;",
	"&lceil;",
	"&lcub;",
	"&lcy;",
	"&ldca;",
	"&ldquo;",
	"&ldquor;",
	"&ldrdhar;",
	"&ldrushar;",
	"&ldsh;",
	"&le;",
	"&leftanglebracket;",
	"&leftarrow;",
	"&leftarrowbar;",
	"&leftarrowrightarrow;",
	"&leftarrowtail;",
	"&leftceiling;",
	"&leftdoublebracket;",
	"&leftdownteevector;",
	"&leftdownvector;",
	"&leftdownvectorbar;",
	"&leftfloor;",
	"&leftharpoondown;",
	"&leftharpoonup;",
	"&leftleftarrows;",
	"&leftrightarrow;",
	"&leftrightarrows;",
	"&leftrightharpoons;",
	"&leftrightsquigarrow;",
	"&leftrightvector;",
	"&lefttee;",
	"&leftteearrow;",
	"&leftteevector;",
	"&leftthreetimes;",
	"&lefttriangle;",
	"&lefttrianglebar;",
	"&lefttriangleequal;",
	"&leftupdownvector;",
	"&leftupteevector;",
	"&leftupvector;",
	"&leftupvectorbar;",
	"&leftvector;",
	"&leftvectorbar;",
	"&leg;",
	"&leq;",
	"&leqq;",
	"&leqslant;",
	"&les;",
	"&lescc;",
	"&lesdot;",
	"&lesdoto;",
	"&lesdotor;",
	"&lesg;",
	"&lesges;",
	"&lessapprox;",
	"&lessdot;",
	"&lesseqgtr;",
	"&lesseqqgtr;",
	"&lessequalgreater;",
	"&lessfullequal;",
	"&lessgreater;",
	"&lessgtr;",
	"&lessless;",
	"&lesssim;",
	"&lessslantequal;",
	"&lesstilde;",
	"&lfisht;",
	"&lfloor;",
	"&lfr;",
	"&lg;",
	"&lge;",
	"&lhar;",
	"&lhard;",
	"&lharu;",
	"&lharul;",
	"&lhblk;",
	"&ljcy;",
	"&ll;",
	"&llarr;",
	"&llcorner;",
	"&lleftarrow;",
	"&llhard;",
	"&lltri;",
	"&lmidot;",
	"&lmoust;",
	"&lmoustache;",
	"&lnap;",
	"&lnapprox;",
	"&lne;",
	"&lneq;",
	"&lneqq;",
	"&lnsim;",
	"&loang;",
	"&loarr;",
	"&lobrk;",
	"&longleftarrow;",
	"&longleftrightarrow;",
	"&longmapsto;",
	"&longrightarrow;",
	"&looparrowleft;",
	"&looparrowright;",
	"&lopar;",
	"&lopf;",
	"&loplus;",
	"&lotimes;",
	"&lowast;",
	"&lowbar;",
	"&lowerleftarrow;",
	"&lowerrightarrow;",
	"&loz;",
	"&lozenge;",
	"&lozf;",
	"&lpar;",
	"&lparlt;",
	"&lrarr;",
	"&lrcorner;",
	"&lrhar;",
	"&lrhard;",
	"&lrm;",
	"&lrtri;",
	"&lsaquo;",
	"&lscr;",
	"&lsh;",
	"&lsim;",
	"&lsime;",
	"&lsimg;",
	"&lsqb;",
	"&lsquo;",
	"&lsquor;",
	"&lstrok;",
	"&lt;",
	"&ltcc;",
	"&ltcir;",
	"&ltdot;",
	"&lthree;",
	"&ltimes;",
	"&ltlarr;",
	"&ltquest;",
	"&ltri;",
	"&ltrie;",
	"&ltrif;",
	"&ltrpar;",
	"&lurdshar;",
	"&luruhar;",
	"&lvertneqq;",
	"&lvne;",
	"&macr;",
	"&male;",
	"&malt;",
	"&maltese;",
	"&map;",
	"&mapsto;",
	"&mapstodown;",
	"&mapstoleft;",
	"&mapstoup;",
	"&marker;",
	"&mcomma;",
	"&mcy;",
	"&mdash;",
	"&mddot;",
	"&measuredangle;",
	"&mediumspace;",
	"&mellintrf;",
	"&mfr;",
	"&mho;",
	"&micro;",
	"&mid;",
	"&midast;",
	"&midcir;",
	"&middot;",
	"&minus;",
	"&minusb;",
	"&minusd;",
	"&minusdu;",
	"&minusplus;",
	"&mlcp;",
	"&mldr;",
	"&mnplus;",
	"&models;",
	"&mopf;",
	"&mp;",
	"&mscr;",
	"&mstpos;",
	"&mu;",
	"&multimap;",
	"&mumap;",
	"&nabla;",
	"&nacute;",
	"&nang;",
	"&nap;",
	"&nape;",
	"&napid;",
	"&napos;",
	"&napprox;",
	"&natur;",
	"&natural;",
	"&naturals;",
	"&nbsp;",
	"&nbump;",
	"&nbumpe;",
	"&ncap;",
	"&ncaron;",
	"&ncedil;",
	"&ncong;",
	"&ncongdot;",
	"&ncup;",
	"&ncy;",
	"&ndash;",
	"&ne;",
	"&nearhk;",
	"&nearr;",
	"&nearrow;",
	"&nedot;",
	"&negativemediumspace;",
	"&negativethickspace;",
	"&negativethinspace;",
	"&negativeverythinspace;",
	"&nequiv;",
	"&nesear;",
	"&nesim;",
	"&nestedgreatergreater;",
	"&nestedlessless;",
	"&newline;",
	"&nexist;",
	"&nexists;",
	"&nfr;",
	"&nge;",
	"&ngeq;",
	"&ngeqq;",
	"&ngeqslant;",
	"&nges;",
	"&ngg;",
	"&ngsim;",
	"&ngt;",
	"&ngtr;",
	"&ngtv;",
	"&nharr;",
	"&nhpar;",
	"&ni;",
	"&nis;",
	"&nisd;",
	"&niv;",
	"&njcy;",
	"&nlarr;",
	"&nldr;",
	"&nle;",
	"&nleftarrow;",
	"&nleftrightarrow;",
	"&nleq;",
	"&nleqq;",
	"&nleqslant;",
	"&nles;",
	"&nless;",
	"&nll;",
	"&nlsim;",
	"&nlt;",
	"&nltri;",
	"&nltrie;",
	"&nltv;",
	"&nmid;",
	"&nobreak;",
	"&nonbreakingspace;",
	"&nopf;",
	"&not;",
	"&notcongruent;",
	"&notcupcap;",
	"&notdoubleverticalbar;",
	"&notelement;",
	"&notequal;",
	"&notequaltilde;",
	"&notexists;",
	"&notgreater;",
	"&notgreaterequal;",
	"&notgreaterfullequal;",
	"&notgreatergreater;",
	"&notgreaterless;",
	"&notgreaterslantequal;",
	"&notgreatertilde;",
	"&nothumpdownhump;",
	"&nothumpequal;",
	"&notin;",
	"&notindot;",
	"&notine;",
	"&notinva;",
	"&notinvb;",
	"&notinvc;",
	"&notlefttriangle;",
	"&notlefttrianglebar;",
	"&notlefttriangleequal;",
	"&notless;",
	"&notlessequal;",
	"&notlessgreater;",
	"&notlessless;",
	"&notlessslantequal;",
	"&notlesstilde;",
	"&notnestedgreatergreater;",
	"&notnestedlessless;",
	"&notni;",
	"&notniva;",
	"&notnivb;",
	"&notnivc;",
	"&notprecedes;",
	"&notprecedesequal;",
	"&notprecedesslantequal;",
	"&notreverseelement;",
	"&notrighttriangle;",
	"&notrighttrianglebar;",
	"&notrighttriangleequal;",
	"&notsquaresubset;",
	"&notsquaresubsetequal;",
	"&notsquaresuperset;",
	"&notsquaresupersetequal;",
	"&notsubset;",
	"&notsubsetequal;",
	"&notsucceeds;",
	"&notsucceedsequal;",
	"&notsucceedsslantequal;",
	"&notsucceedstilde;",
	"&notsuperset;",
	"&notsupersetequal;",
	"&nottilde;",
	"&nottildeequal;",
	"&nottildefullequal;",
	"&nottildetilde;",
	"&notverticalbar;",
	"&npar;",
	"&nparallel;",
	"&nparsl;",
	"&npart;",
	"&npolint;",
	"&npr;",
	"&nprcue;",
	"&npre;",
	"&nprec;",
	"&npreceq;",
	"&nrarr;",
	"&nrarrc;",
	"&nrarrw;",
	"&nrightarrow;",
	"&nrtri;",
	"&nrtrie;",
	"&nsc;",
	"&nsccue;",
	"&nsce;",
	"&nscr;",
	"&nshortmid;",
	"&nshortparallel;",
	"&nsim;",
	"&nsime;",
	"&nsimeq;",
	"&nsmid;",
	"&nspar;",
	"&nsqsube;",
	"&nsqsupe;",
	"&nsub;",
	"&nsube;",
	"&nsubset;",
	"&nsubseteq;",
	"&nsubseteqq;",
	"&nsucc;",
	"&nsucceq;",
	"&nsup;",
	"&nsupe;",
	"&nsupset;",
	"&nsupseteq;",
	"&nsupseteqq;",
	"&ntgl;",
	"&ntilde;",
	"&ntlg;",
	"&ntriangleleft;",
	"&ntrianglelefteq;",
	"&ntriangleright;",
	"&ntrianglerighteq;",
	"&nu;",
	"&num;",
	"&numero;",
	"&numsp;",
	"&nvap;",
	"&nvdash;",
	"&nvge;",
	"&nvgt;",
	"&nvharr;",
	"&nvinfin;",
	"&nvlarr;",
	"&nvle;",
	"&nvlt;",
	"&nvltrie;",
	"&nvrarr;",
	"&nvrtrie;",
	"&nvsim;",
	"&nwarhk;",
	"&nwarr;",
	"&nwarrow;",
	"&nwnear;",
	"&oacute;",
	"&oast;",
	"&ocir;",
	"&ocirc;",
	"&ocy;",
	"&odash;",
	"&odblac;",
	"&odiv;",
	"&odot;",
	"&odsold;",
	"&oelig;",
	"&ofcir;",
	"&ofr;",
	"&ogon;",
	"&ograve;",
	"&ogt;",
	"&ohbar;",
	"&ohm;",
	"&oint;",
	"&olarr;",
	"&olcir;",
	"&olcross;",
	"&oline;",
	"&olt;",
	"&omacr;",
	"&omega;",
	"&omicron;",
	"&omid;",
	"&ominus;",
	"&oopf;",
	"&opar;",
	"&opencurlydoublequote;",
	"&opencurlyquote;",
	"&operp;",
	"&oplus;",
	"&or;",
	"&orarr;",
	"&ord;",
	"&order;",
	"&orderof;",
	"&ordf;",
	"&ordm;",
	"&origof;",
	"&oror;",
	"&orslope;",
	"&orv;",
	"&os;",
	"&oscr;",
	"&oslash;",
	"&osol;",
	"&otilde;",
	"&otimes;",
	"&otimesas;",
	"&ouml;",
	"&ovbar;",
	"&overbar;",
	"&overbrace;",
	"&overbracket;",
	"&overparenthesis;",
	"&par;",
	"&para;",
	"&parallel;",
	"&parsim;",
	"&parsl;",
	"&part;",
	"&partiald;",
	"&pcy;",
	"&percnt;",
	"&period;",
	"&permil;",
	"&perp;",
	"&pertenk;",
	"&pfr;",
	"&phi;",
	"&phiv;",
	"&phmmat;",
	"&phone;",
	"&pi;",
	"&pitchfork;",
	"&piv;",
	"&planck;",
	"&planckh;",
	"&plankv;",
	"&plus;",
	"&plusacir;",
	"&plusb;",
	"&pluscir;",
	"&plusdo;",
	"&plusdu;",
	"&pluse;",
	"&plusminus;",
	"&plusmn;",
	"&plussim;",
	"&plustwo;",
	"&pm;",
	"&poincareplane;",
	"&pointint;",
	"&popf;",
	"&pound;",
	"&pr;",
	"&prap;",
	"&prcue;",
	"&pre;",
	"&prec;",
	"&precapprox;",
	"&preccurlyeq;",
	"&precedes;",
	"&precedesequal;",
	"&precedesslantequal;",
	"&precedestilde;",
	"&preceq;",
	"&precnapprox;",
	"&precneqq;",
	"&precnsim;",
	"&precsim;",
	"&prime;",
	"&primes;",
	"&prnap;",
	"&prne;",
	"&prnsim;",
	"&prod;",
	"&product;",
	"&profalar;",
	"&profline;",
	"&profsurf;",
	"&prop;",
	"&proportion;",
	"&proportional;",
	"&propto;",
	"&prsim;",
	"&prurel;",
	"&pscr;",
	"&psi;",
	"&puncsp;",
	"&qfr;",
	"&qint;",
	"&qopf;",
	"&qprime;",
	"&qscr;",
	"&quaternions;",
	"&quatint;",
	"&quest;",
	"&questeq;",
	"&quot;",
	"&raarr;",
	"&race;",
	"&racute;",
	"&radic;",
	"&raemptyv;",
	"&rang;",
	"&rangd;",
	"&range;",
	"&rangle;",
	"&raquo;",
	"&rarr;",
	"&rarrap;",
	"&rarrb;",
	"&rarrbfs;",
	"&rarrc;",
	"&rarrfs;",
	"&rarrhk;",
	"&rarrlp;",
	"&rarrpl;",
	"&rarrsim;",
	"&rarrtl;",
	"&rarrw;",
	"&ratail;",
	"&ratio;",
	"&rationals;",
	"&rbarr;",
	"&rbbrk;",
	"&rbrace;",
	"&rbrack;",
	"&rbrke;",
	"&rbrksld;",
	"&rbrkslu;",
	"&rcaron;",
	"&rcedil;",
	"&rceil;",
	"&rcub;",
	"&rcy;",
	"&rdca;",
	"&rdldhar;",
	"&rdquo;",
	"&rdquor;",
	"&rdsh;",
	"&re;",
	"&real;",
	"&realine;",
	"&realpart;",
	"&reals;",
	"&rect;",
	"&reg;",
	"&reverseelement;",
	"&reverseequilibrium;",
	"&reverseupequilibrium;",
	"&rfisht;",
	"&rfloor;",
	"&rfr;",
	"&rhar;",
	"&rhard;",
	"&rharu;",
	"&rharul;",
	"&rho;",
	"&rhov;",
	"&rightanglebracket;",
	"&rightarrow;",
	"&rightarrowbar;",
	"&rightarrowleftarrow;",
	"&rightarrowtail;",
	"&rightceiling;",
	"&rightdoublebracket;",
	"&rightdownteevector;",
	"&rightdownvector;",
	"&rightdownvectorbar;",
	"&rightfloor;",
	"&rightharpoondown;",
	"&rightharpoonup;",
	"&rightleftarrows;",
	"&rightleftharpoons;",
	"&rightrightarrows;",
	"&rightsquigarrow;",
	"&righttee;",
	"&rightteearrow;",
	"&rightteevector;",
	"&rightthreetimes;",
	"&righttriangle;",
	"&righttrianglebar;",
	"&righttriangleequal;",
	"&rightupdownvector;",
	"&rightupteevector;",
	"&rightupvector;",
	"&rightupvectorbar;",
	"&rightvector;",
	"&rightvectorbar;",
	"&ring;",
	"&risingdotseq;",
	"&rlarr;",
	"&rlhar;",
	"&rlm;",
	"&rmoust;",
	"&rmoustache;",
	"&rnmid;",
	"&roang;",
	"&roarr;",
	"&robrk;",
	"&ropar;",
	"&ropf;",
	"&roplus;",
	"&rotimes;",
	"&roundimplies;",
	"&rpar;",
	"&rpargt;",
	"&rppolint;",
	"&rrarr;",
	"&rrightarrow;",
	"&rsaquo;",
	"&rscr;",
	"&rsh;",
	"&rsqb;",
	"&rsquo;",
	"&rsquor;",
	"&rthree;",
	"&rtimes;",
	"&rtri;",
	"&rtrie;",
	"&rtrif;",
	"&rtriltri;",
	"&ruledelayed;",
	"&ruluhar;",
	"&rx;",
	"&sacute;",
	"&sbquo;",
	"&sc;",
	"&scap;",
	"&scaron;",
	"&sccue;",
	"&sce;",
	"&scedil;",
	"&scirc;",
	"&scnap;",
	"&scne;",
	"&scnsim;",
	"&scpolint;",
	"&scsim;",
	"&scy;",
	"&sdot;",
	"&sdotb;",
	"&sdote;",
	"&searhk;",
	"&searr;",
	"&searrow;",
	"&sect;",
	"&semi;",
	"&seswar;",
	"&setminus;",
	"&setmn;",
	"&sext;",
	"&sfr;",
	"&sfrown;",
	"&sharp;",
	"&shchcy;",
	"&shcy;",
	"&shortdownarrow;",
	"&shortleftarrow;",
	"&shortmid;",
	"&shortparallel;",
	"&shortrightarrow;",
	"&shortuparrow;",
	"&shy;",
	"&sigma;",
	"&sigmaf;",
	"&sigmav;",
	"&sim;",
	"&simdot;",
	"&sime;",
	"&simeq;",
	"&simg;",
	"&simge;",
	"&siml;",
	"&simle;",
	"&simne;",
	"&simplus;",
	"&simrarr;",
	"&slarr;",
	"&smallcircle;",
	"&smallsetminus;",
	"&smashp;",
	"&smeparsl;",
	"&smid;",
	"&smile;",
	"&smt;",
	"&smte;",
	"&smtes;",
	"&softcy;",
	"&sol;",
	"&solb;",
	"&solbar;",
	"&sopf;",
	"&spades;",
	"&spadesuit;",
	"&spar;",
	"&sqcap;",
	"&sqcaps;",
	"&sqcup;",
	"&sqcups;",
	"&sqrt;",
	"&sqsub;",
	"&sqsube;",
	"&sqsubset;",
	"&sqsubseteq;",
	"&sqsup;",
	"&sqsupe;",
	"&sqsupset;",
	"&sqsupseteq;",
	"&squ;",
	"&square;",
	"&squareintersection;",
	"&squaresubset;",
	"&squaresubsetequal;",
	"&squaresuperset;",
	"&squaresupersetequal;",
	"&squareunion;",
	"&squarf;",
	"&squf;",
	"&srarr;",
	"&sscr;",
	"&ssetmn;",
	"&ssmile;",
	"&sstarf;",
	"&star;",
	"&starf;",
	"&straightepsilon;",
	"&straightphi;",
	"&strns;",
	"&sub;",
	"&subdot;",
	"&sube;",
	"&subedot;",
	"&submult;",
	"&subne;",
	"&subplus;",
	"&subrarr;",
	"&subset;",
	"&subseteq;",
	"&subseteqq;",
	"&subsetequal;",
	"&subsetneq;",
	"&subsetneqq;",
	"&subsim;",
	"&subsub;",
	"&subsup;",
	"&succ;",
	"&succapprox;",
	"&succcurlyeq;",
	"&succeeds;",
	"&succeedsequal;",
	"&succeedsslantequal;",
	"&succeedstilde;",
	"&succeq;",
	"&succnapprox;",
	"&succneqq;",
	"&succnsim;",
	"&succsim;",
	"&suchthat;",
	"&sum;",
	"&sung;",
	"&sup1;",
	"&sup2;",
	"&sup3;",
	"&sup;",
	"&supdot;",
	"&supdsub;",
	"&supe;",
	"&supedot;",
	"&superset;",
	"&supersetequal;",
	"&suphsol;",
	"&suphsub;",
	"&suplarr;",
	"&supmult;",
	"&supne;",
	"&supplus;",
	"&supset;",
	"&supseteq;",
	"&supseteqq;",
	"&supsetneq;",
	"&supsetneqq;",
	"&supsim;",
	"&supsub;",
	"&supsup;",
	"&swarhk;",
	"&swarr;",
	"&swarrow;",
	"&swnwar;",
	"&szlig;",
	"&tab;",
	"&target;",
	"&tau;",
	"&tbrk;",
	"&tcaron;",
	"&tcedil;",
	"&tcy;",
	"&tdot;",
	"&telrec;",
	"&tfr;",
	"&there4;",
	"&therefore;",
	"&theta;",
	"&thetasym;",
	"&thetav;",
	"&thickapprox;",
	"&thicksim;",
	"&thickspace;",
	"&thinsp;",
	"&thinspace;",
	"&thkap;",
	"&thksim;",
	"&thorn;",
	"&tilde;",
	"&tildeequal;",
	"&tildefullequal;",
	"&tildetilde;",
	"&times;",
	"&timesb;",
	"&timesbar;",
	"&timesd;",
	"&tint;",
	"&toea;",
	"&top;",
	"&topbot;",
	"&topcir;",
	"&topf;",
	"&topfork;",
	"&tosa;",
	"&tprime;",
	"&trade;",
	"&triangle;",
	"&triangledown;",
	"&triangleleft;",
	"&trianglelefteq;",
	"&triangleq;",
	"&triangleright;",
	"&trianglerighteq;",
	"&tridot;",
	"&trie;",
	"&triminus;",
	"&tripledot;",
	"&triplus;",
	"&trisb;",
	"&tritime;",
	"&trpezium;",
	"&tscr;",
	"&tscy;",
	"&tshcy;",
	"&tstrok;",
	"&twixt;",
	"&twoheadleftarrow;",
	"&twoheadrightarrow;",
	"&uacute;",
	"&uarr;",
	"&uarrocir;",
	"&ubrcy;",
	"&ubreve;",
	"&ucirc;",
	"&ucy;",
	"&udarr;",
	"&udblac;",
	"&udhar;",
	"&ufisht;",
	"&ufr;",
	"&ugrave;",
	"&uhar;",
	"&uharl;",
	"&uharr;",
	"&uhblk;",
	"&ulcorn;",
	"&ulcorner;",
	"&ulcrop;",
	"&ultri;",
	"&umacr;",
	"&uml;",
	"&underbar;",
	"&underbrace;",
	"&underbracket;",
	"&underparenthesis;",
	"&union;",
	"&unionplus;",
	"&uogon;",
	"&uopf;",
	"&uparrow;",
	"&uparrowbar;",
	"&uparrowdownarrow;",
	"&updownarrow;",
	"&upequilibrium;",
	"&upharpoonleft;",
	"&upharpoonright;",
	"&uplus;",
	"&upperleftarrow;",
	"&upperrightarrow;",
	"&upsi;",
	"&upsih;",
	"&upsilon;",
	"&uptee;",
	"&upteearrow;",
	"&upuparrows;",
	"&urcorn;",
	"&urcorner;",
	"&urcrop;",
	"&uring;",
	"&urtri;",
	"&uscr;",
	"&utdot;",
	"&utilde;",
	"&utri;",
	"&utrif;",
	"&uuarr;",
	"&uuml;",
	"&uwangle;",
	"&vangrt;",
	"&varepsilon;",
	"&varkappa;",
	"&varnothing;",
	"&varphi;",
	"&varpi;",
	"&varpropto;",
	"&varr;",
	"&varrho;",
	"&varsigma;",
	"&varsubsetneq;",
	"&varsubsetneqq;",
	"&varsupsetneq;",
	"&varsupsetneqq;",
	"&vartheta;",
	"&vartriangleleft;",
	"&vartriangleright;",
	"&vbar;",
	"&vbarv;",
	"&vcy;",
	"&vdash;",
	"&vdashl;",
	"&vee;",
	"&veebar;",
	"&veeeq;",
	"&vellip;",
	"&verbar;",
	"&vert;",
	"&verticalbar;",
	"&verticalline;",
	"&verticalseparator;",
	"&verticaltilde;",
	"&verythinspace;",
	"&vfr;",
	"&vltri;",
	"&vnsub;",
	"&vnsup;",
	"&vopf;",
	"&vprop;",
	"&vrtri;",
	"&vscr;",
	"&vsubne;",
	"&vsupne;",
	"&vvdash;",
	"&vzigzag;",
	"&wcirc;",
	"&wedbar;",
	"&wedge;",
	"&wedgeq;",
	"&weierp;",
	"&wfr;",
	"&wopf;",
	"&wp;",
	"&wr;",
	"&wreath;",
	"&wscr;",
	"&xcap;",
	"&xcirc;",
	"&xcup;",
	"&xdtri;",
	"&xfr;",
	"&xharr;",
	"&xi;",
	"&xlarr;",
	"&xmap;",
	"&xnis;",
	"&xodot;",
	"&xopf;",
	"&xoplus;",
	"&xotime;",
	"&xrarr;",
	"&xscr;",
	"&xsqcup;",
	"&xuplus;",
	"&xutri;",
	"&xvee;",
	"&xwedge;",
	"&yacute;",
	"&yacy;",
	"&ycirc;",
	"&ycy;",
	"&yen;",
	"&yfr;",
	"&yicy;",
	"&yopf;",
	"&yscr;",
	"&yucy;",
	"&yuml;",
	"&zacute;",
	"&zcaron;",
	"&zcy;",
	"&zdot;",
	"&zeetrf;",
	"&zerowidthspace;",
	"&zeta;",
	"&zfr;",
	"&zhcy;",
	"&zigrarr;",
	"&zopf;",
	"&zscr;",
	"&zwj;",
	"&zwnj;"
];

export { bundledElements as b, entities as e };
//# sourceMappingURL=elements.js.map
